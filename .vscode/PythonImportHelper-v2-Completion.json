[
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "get_timestamp",
        "kind": 2,
        "importPath": "scripts.pulsefit_rum_data_generator",
        "description": "scripts.pulsefit_rum_data_generator",
        "peekOfCode": "def get_timestamp(base_time, offset_minutes):\n    t = base_time + timedelta(minutes=offset_minutes)\n    return t.strftime(\"%m/%d/%Y, %I:%M %p\")\n# ----- Generate realistic user sessions -----\ndef generate_rum_data(target_events=10000, num_users=3000):\n    events = []\n    base_date = datetime.now() - timedelta(days=90)\n    while len(events) < target_events:\n        user_id = random.randint(10000, 99999)\n        country = random.choices(COUNTRIES, weights=[0.6, 0.15, 0.3, 0.1, 0.20, 0.15])[",
        "detail": "scripts.pulsefit_rum_data_generator",
        "documentation": {}
    },
    {
        "label": "generate_rum_data",
        "kind": 2,
        "importPath": "scripts.pulsefit_rum_data_generator",
        "description": "scripts.pulsefit_rum_data_generator",
        "peekOfCode": "def generate_rum_data(target_events=10000, num_users=3000):\n    events = []\n    base_date = datetime.now() - timedelta(days=90)\n    while len(events) < target_events:\n        user_id = random.randint(10000, 99999)\n        country = random.choices(COUNTRIES, weights=[0.6, 0.15, 0.3, 0.1, 0.20, 0.15])[\n            0]  # Nigeria more common\n        # each user may have 1â€“3 sessions\n        for _ in range(random.randint(1, 3)):\n            session_id = random.randint(1000, 9999)",
        "detail": "scripts.pulsefit_rum_data_generator",
        "documentation": {}
    },
    {
        "label": "PLANS",
        "kind": 5,
        "importPath": "scripts.pulsefit_rum_data_generator",
        "description": "scripts.pulsefit_rum_data_generator",
        "peekOfCode": "PLANS = [\"Basic\", \"Pro\", \"Elite\"]\nTRAINERS = [\"Alex Johnson\", \"Mia Carter\", \"Liam Smith\"]\nPAGES = [\"Home\", \"Plans\", \"Trainers\", \"Contact\"]\nACTIONS = [\n    *[f\"Visited {page}\" for page in PAGES],\n    *[f\"Viewed Trainer: {t}\" for t in TRAINERS],\n    *[f\"Viewed Plan: {p}\" for p in PLANS]\n]\nCOUNTRIES = [\"Nigeria\", \"Kenya\", \"Egypt\", \"South Africa\", \"USA\", \"UK\"]\n# ----- Timestamp helper -----",
        "detail": "scripts.pulsefit_rum_data_generator",
        "documentation": {}
    },
    {
        "label": "TRAINERS",
        "kind": 5,
        "importPath": "scripts.pulsefit_rum_data_generator",
        "description": "scripts.pulsefit_rum_data_generator",
        "peekOfCode": "TRAINERS = [\"Alex Johnson\", \"Mia Carter\", \"Liam Smith\"]\nPAGES = [\"Home\", \"Plans\", \"Trainers\", \"Contact\"]\nACTIONS = [\n    *[f\"Visited {page}\" for page in PAGES],\n    *[f\"Viewed Trainer: {t}\" for t in TRAINERS],\n    *[f\"Viewed Plan: {p}\" for p in PLANS]\n]\nCOUNTRIES = [\"Nigeria\", \"Kenya\", \"Egypt\", \"South Africa\", \"USA\", \"UK\"]\n# ----- Timestamp helper -----\ndef get_timestamp(base_time, offset_minutes):",
        "detail": "scripts.pulsefit_rum_data_generator",
        "documentation": {}
    },
    {
        "label": "PAGES",
        "kind": 5,
        "importPath": "scripts.pulsefit_rum_data_generator",
        "description": "scripts.pulsefit_rum_data_generator",
        "peekOfCode": "PAGES = [\"Home\", \"Plans\", \"Trainers\", \"Contact\"]\nACTIONS = [\n    *[f\"Visited {page}\" for page in PAGES],\n    *[f\"Viewed Trainer: {t}\" for t in TRAINERS],\n    *[f\"Viewed Plan: {p}\" for p in PLANS]\n]\nCOUNTRIES = [\"Nigeria\", \"Kenya\", \"Egypt\", \"South Africa\", \"USA\", \"UK\"]\n# ----- Timestamp helper -----\ndef get_timestamp(base_time, offset_minutes):\n    t = base_time + timedelta(minutes=offset_minutes)",
        "detail": "scripts.pulsefit_rum_data_generator",
        "documentation": {}
    },
    {
        "label": "ACTIONS",
        "kind": 5,
        "importPath": "scripts.pulsefit_rum_data_generator",
        "description": "scripts.pulsefit_rum_data_generator",
        "peekOfCode": "ACTIONS = [\n    *[f\"Visited {page}\" for page in PAGES],\n    *[f\"Viewed Trainer: {t}\" for t in TRAINERS],\n    *[f\"Viewed Plan: {p}\" for p in PLANS]\n]\nCOUNTRIES = [\"Nigeria\", \"Kenya\", \"Egypt\", \"South Africa\", \"USA\", \"UK\"]\n# ----- Timestamp helper -----\ndef get_timestamp(base_time, offset_minutes):\n    t = base_time + timedelta(minutes=offset_minutes)\n    return t.strftime(\"%m/%d/%Y, %I:%M %p\")",
        "detail": "scripts.pulsefit_rum_data_generator",
        "documentation": {}
    },
    {
        "label": "COUNTRIES",
        "kind": 5,
        "importPath": "scripts.pulsefit_rum_data_generator",
        "description": "scripts.pulsefit_rum_data_generator",
        "peekOfCode": "COUNTRIES = [\"Nigeria\", \"Kenya\", \"Egypt\", \"South Africa\", \"USA\", \"UK\"]\n# ----- Timestamp helper -----\ndef get_timestamp(base_time, offset_minutes):\n    t = base_time + timedelta(minutes=offset_minutes)\n    return t.strftime(\"%m/%d/%Y, %I:%M %p\")\n# ----- Generate realistic user sessions -----\ndef generate_rum_data(target_events=10000, num_users=3000):\n    events = []\n    base_date = datetime.now() - timedelta(days=90)\n    while len(events) < target_events:",
        "detail": "scripts.pulsefit_rum_data_generator",
        "documentation": {}
    }
]